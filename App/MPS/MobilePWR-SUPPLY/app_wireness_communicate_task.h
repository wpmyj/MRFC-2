#ifndef __APP_WIRENESS_COMMUNICATE_TASK_H__
#define __APP_WIRENESS_COMMUNICATE_TASK_H__
typedef enum
{
    //0-9暂空
    SELF_CHECK_CODE_BYTE_8 = 2,
    SELF_CHECK_CODE_BYTE_7,
    SELF_CHECK_CODE_BYTE_6,
    SELF_CHECK_CODE_BYTE_5,
    SELF_CHECK_CODE_BYTE_4,
    SELF_CHECK_CODE_BYTE_3,
    SELF_CHECK_CODE_BYTE_2,
    SELF_CHECK_CODE_BYTE_1,

    RUN_ALARM_CODE_BYTE_4 = 10,
    RUN_ALARM_CODE_BYTE_3,
    RUN_ALARM_CODE_BYTE_2,
    RUN_ALARM_CODE_BYTE_1,

    RUNNING_STATU_CODE_BYDE_4 = 14,
    RUNNING_STATU_CODE_BYDE_3,
    RUNNING_STATU_CODE_BYDE_2,
    RUNNING_STATU_CODE_BYDE_1,

    REFORMER_TEMP_HIGH = 18,
    REFORMER_TEMP_LOW,
    FIRE_OR_ROD_TEMP_HIGH,
    FIRE_OR_ROD_TEMP_LOW,

    LIQUID_PRESS_INTEGER_PART = 38,
    LIQUID_PRESS_DECIMAL_PART,

    LIQUID_FLOW_VELOCITY_INTEGER_PART = 46,
    LIQUID_FLOW_VELOCITY_DECIMAL_PART,

    HYDROGEN_FAN_SPD_CONTROL_HIGH = 56,
    HYDROGEN_FAN_SPD_CONTROL_LOW,
    HYDROGEN_FAN_SPD_FEEDBACK_HIGH,
    HYDROGEN_FAN_SPD_FEEDBACK_LOW,

    PUMP_SPD_CONTROL_HIGH = 60,
    PUMP_SPD_CONTROL_LOW,
    PUMP_SPD_FEEDBACK_HIGH,
    PUMP_SPD_FEEDBACK_LOW,

    STACK_CURRENT_INTEGER_PART = 76, //unit is Amp
    STACK_CURRENT_DECIMAL_PART,

    STACK_VOLTAGE_INTEGER_PART = 78, //unit is voltage
    STACK_VOLTAGE_DECIMAL_PART,

    STACK_TEMP_INTEGER_PART = 80,
    STACK_TEMP_DECIMAL_PART,

    HYDROGEN_PRESS_INTEGER_PART = 82,//unit is KPa
    HYDROGEN_PRESS_DECIMAL_PART,

    STACK_FAN_SPD_CONTROL_HIGH = 104,
    STACK_FAN_SPD_CONTROL_LOW,
    STACK_FAN_PART_B_SPD_FEEDBACK_HIGH,
    STACK_FAN_PART_B_SPD_FEEDBACK_LOW,
    STACK_FAN_PART_A_SPD_FEEDBACK_HIGH,
    STACK_FAN_PART_A_SPD_FEEDBACK_LOW,

    HYDROGEN_PRODUCT_TIME_THIS_TIME_HOUR_HIGH = 110,
    HYDROGEN_PRODUCT_TIME_THIS_TIME_HOUR_LOW,
    HYDROGEN_PRODUCT_TIME_THIS_TIME_MINUTE,
    HYDROGEN_PRODUCT_TIME_THIS_TIME_SECOND,

    HYDROGEN_PRODUCT_TIME_TOTAL_HOUR_HIGH = 114,
    HYDROGEN_PRODUCT_TIME_TOTAL_HOUR_LOW,
    HYDROGEN_PRODUCT_TIME_TOTAL_MINUTE,
    HYDROGEN_PRODUCT_TIME_TOTAL_SECOND,

    HYDROGEN_PRODUCT_TOTAL_TIMES_HIGH = 118,
    HYDROGEN_PRODUCT_TOTAL_TIMES_LOW,

    STACK_WORK_TIME_THIS_TIME_HOUR_HIGH = 120,
    STACK_WORK_TIME_THIS_TIME_HOUR_LOW,
    STACK_WORK_TIME_THIS_TIME_MINUTE,
    STACK_WORK_TIME_THIS_TIME_SECOND,

    STACK_WORK_TIME_TOTAL_HOUR_HIGH = 124,
    STACK_WORK_TIME_TOTAL_HOUR_LOW,
    STACK_WORK_TIME_TOTAL_MINUTE,
    STACK_WORK_TIME_TOTAL_SECOND,

    STACK_WORK_TOTAL_TIMES_HIGH = 128,
    STACK_WORK_TOTAL_TIMES_LOW,
    //当前单机输出功率
    CURRENT_ISOLATED_POWER_INTEGER_PART_HIGH = 130,
    CURRENT_ISOLATED_POWER_INTEGER_PART_LOW,
    CURRENT_ISOLATED_POWER_DECIMAL_PART,
    //当前联动输出总功率
    CURRENT_GANGED_POWER_INTEGER_PART_HIGH = 133,
    CURRENT_GANGED_POWER_INTEGER_PART_MID,
    CURRENT_GANGED_POWER_INTEGER_PART_LOW,
    CURRENT_GANGED_POWER_DECIMAL_PART,
    //本次单机发电量
    ISOLATED_GENERATED_ENERGY_THIE_TIME_INTEGER_PART_HIGH = 137,
    ISOLATED_GENERATED_ENERGY_THIE_TIME_INTEGER_PART_LOW,
    ISOLATED_GENERATED_ENERGY_THIE_TIME_DECIMAL_PART,
    //本次联动发电量
    GANGED_GENERATED_ENERGY_THIE_TIME_INTEGER_PART_HIGH = 140,
    GANGED_GENERATED_ENERGY_THIE_TIME_INTEGER_PART_LOW,
    GANGED_GENERATED_ENERGY_THIE_TIME_DECIMAL_PART,
    //单机累计发电量
    GENERATED_ENERGY_TOTAL_INTEGER_PART_HIGH = 143,
    GENERATED_ENERGY_TOTAL_INTEGER_PART_LOW,
    GENERATED_ENERGY_TOTAL_DECIMAL_PART,

} PRGM_TX_MSG_DATA_ADDR_Typedef;

void    WirenessCommTaskCreate(void);
void    CmdStart(void);
void    CmdShutDown(void);
#endif
